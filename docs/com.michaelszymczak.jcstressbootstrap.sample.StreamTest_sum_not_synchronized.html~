<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252"></head><body><h1>com.michaelszymczak.jcstressbootstrap.sample.StreamTest</h1>
<p>Tests if racy update to BitSet experiences word tearing.</p>
<table width="100%">
<tbody><tr>
<th width="250">Observed state</th>
<th width="50">Occurrence</th>
<th width="50">Expectation</th>
<th>Interpretation</th>
</tr>
<tr bgcolor="#00ff00">
<td>[3]</td>
<td align="center">477</td>
<td align="center">ACCEPTABLE</td>
<td></td>
</tr>
<tr bgcolor="#00ff00">
<td>[13]</td>
<td align="center">203213</td>
<td align="center">ACCEPTABLE</td>
<td></td>
</tr>
</tbody></table>

<h1>Code</h1>
<pre>
package com.michaelszymczak.jcstressbootstrap.sample;

import org.openjdk.jcstress.annotations.*;
import org.openjdk.jcstress.infra.results.IntResult1;

import java.util.ArrayList;
import java.util.List;

@JCStressTest
@Description("Tests if racy update to BitSet experiences word tearing.")
@Outcome(id = "[3]", expect = Expect.ACCEPTABLE, desc = "")
@Outcome(id = "[13]", expect = Expect.ACCEPTABLE, desc = "")
@State
public class StreamTest {

    final Fixture fixture = new Fixture();

    @Actor
    public void thread1() {
        fixture.modify();
    }

    @Actor
    public void thread2(IntResult1 r) {
        r.r1 = fixture.sum();
    }

    private static class Fixture {
        private final List<Integer> list;

        Fixture() {
            list = new ArrayList<>();
            list.add(1);
            list.add(2);
        }

        public synchronized void modify() {
            list.add(10);
        }

        public int sum() {
            return list.stream().mapToInt(i -> i).sum();
        }
    }

}
</pre>
<p><b>Auxiliary data</b></p>
<pre>java.util.ConcurrentModificationException
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1380)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.IntPipeline.reduce(IntPipeline.java:456)
	at java.util.stream.IntPipeline.sum(IntPipeline.java:414)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.sum(StreamTest.java:42)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest.thread2(StreamTest.java:25)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:199)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:175)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

java.lang.NullPointerException
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.lambda$sum$0(StreamTest.java:42)
	at java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:210)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.IntPipeline.reduce(IntPipeline.java:456)
	at java.util.stream.IntPipeline.sum(IntPipeline.java:414)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.sum(StreamTest.java:42)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest.thread2(StreamTest.java:25)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:199)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:175)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

java.util.ConcurrentModificationException
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1380)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.IntPipeline.reduce(IntPipeline.java:456)
	at java.util.stream.IntPipeline.sum(IntPipeline.java:414)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.sum(StreamTest.java:42)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest.thread2(StreamTest.java:25)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:199)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:175)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

java.lang.NullPointerException
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.lambda$sum$0(StreamTest.java:42)
	at java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:210)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.IntPipeline.reduce(IntPipeline.java:456)
	at java.util.stream.IntPipeline.sum(IntPipeline.java:414)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.sum(StreamTest.java:42)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest.thread2(StreamTest.java:25)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:199)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:175)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

java.lang.NullPointerException
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.lambda$sum$0(StreamTest.java:42)
	at java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:210)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.IntPipeline.reduce(IntPipeline.java:456)
	at java.util.stream.IntPipeline.sum(IntPipeline.java:414)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest$Fixture.sum(StreamTest.java:42)
	at com.michaelszymczak.jcstressbootstrap.sample.StreamTest.thread2(StreamTest.java:25)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:199)
	at com.michaelszymczak.jcstressbootstrap.sample.generated.StreamTest_jcstress$Runner_thread2.call(StreamTest_jcstress.java:175)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

</pre>

</body></html>
